_sr_ensure_repolist()
{
    local download
    REPOLIST_FILE=~/.sr/repolist
    if [ ! -f $REPOLIST_FILE ]
	then
	download=y
    elif [ ! "`find $REPOLIST_FILE -mmin -120`" ]
	then
	download=y
    fi

    if [ "$download" ]
	then
	mkdir -p ~/.sr
	sr repolist > $REPOLIST_FILE
    fi
    echo $REPOLIST_FILE
}

get_first_arg()
{
    local i

    arg=
    for (( i=1; i < COMP_CWORD; i++ )); do
        if [[ "${COMP_WORDS[i]}" != -* ]]; then
            arg=${COMP_WORDS[i]}
            break
        fi
    done
}

_sr()
{
    local cur prev opts
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"
    opts=`sr list-commands`

    get_first_arg

    if [ -z $arg ]; then
        COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
        return 0
    else
	# Switch on the command
	case $arg in

	    # Repository listing
	    cog)
		REPOLIST_FILE=$(_sr_ensure_repolist)
		COMPREPLY=( $(compgen -W "`cat $REPOLIST_FILE`" -- ${cur}) )
		return 0;;

	    # Firmware Manager
	    fwman)
		COMPREPLY=( $(compgen -W "`sr fwman list-commands`" -- ${cur}) )
		return 0;;

	    # Inventory asset creation
	    inv-new-asset)
		if [[ "$cur" == -* ]]; then
			COMPREPLY=( $(compgen -W "--help --editor" -- ${cur}) )
		else
			_count_args
			if [ $args -eq 2 ]; then
				COMPREPLY=( $(compgen -W "`sr inv-list-templates`" -- ${cur}) )
			fi
		fi
		return 0;;

	    # Inventory group creation
	    inv-new-group)
		if [[ "$cur" == -* ]]; then
			COMPREPLY=( $(compgen -W "--help --editor --all" -- ${cur}) )
		else
			_count_args
			if [ $args -eq 2 ]; then
				COMPREPLY=( $(compgen -W "`sr inv-list-assy-templates`" -o dirnames -- ${cur}) )
			fi
		fi
		return 0;;

            # Inventory searching
	    inv-findpart)
		if [[ "$cur" == -* ]]; then
			COMPREPLY=( $(compgen -W "--help --stat" -- ${cur}) )
		else
			_count_args
			if [ $args -eq 2 ]; then
				COMPREPLY=( $(compgen -W "`sr inv-list-templates` `sr inv-list-assy-templates`" -- ${cur}) )
			fi
		fi
		return 0;;

	    *)
		COMPREPLY=( $(compgen -f ${cur}) )
		return 0;;
	esac
    fi
}

complete -F _sr sr
